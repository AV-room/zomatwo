{"version":3,"sources":["enums/Categories.ts","enums/Cuisines.ts","api/ApiIdMap.ts","utils/helpers.ts","utils/constants.ts","api/Api.ts","components/ScrollableList/index.tsx","components/Details/index.tsx","components/Checkbox/index.tsx","App.tsx","index.tsx"],"names":["Categories","Cuisines","apiIds","categories","dining","takeaway","delivery","pubsBars","nightlife","cuisines","asian","bakery","cafe","chinese","coffee","fast","italian","pizza","pub","sandwich","egyptian","bubbleTea","other","withinRange","range","value","convertPriceBracketToSymbol","priceBracket","symbolString","i","getTimeoutPromise","Promise","resolve","reject","setTimeout","DEFAULT_COST_BOUNDS","DEFAULT_RATING_BOUNDS","baseUrl","userKey","getCuisines","a","requestOptions","url","method","headers","Accept","params","city_id","race","axios","cuisinesResponse","allCuisineIds","data","map","dataItem","cuisine","cuisine_id","getFilteredResults","filters","otherCuisineIds","isEqual","cost","rating","paramSets","createSearchQueryParamSets","collectSearchResponses","searchResponses","allRestaurants","reduce","acc","curr","restaurants","restaurant","applySecondaryFilters","costSort","ratingSort","type","order","getSortOrder","createSearchQueryParams","sorting","categoryIds","c","cuisineIds","join","entity_type","entity_id","category","sort","currentBounds","defaultBounds","mean","uniq","filter","r","average_cost_for_two","parseFloat","user_rating","aggregate_rating","BATCH_TOTAL","promises","paramSet","startIndex","totalResults","querySearchApi","start","res","results_found","push","Math","min","all","ScrollableList","list","handleSelection","useState","selected","setSelected","className","length","key","onClick","e","name","icon","faStar","price_range","Details","showDetails","handleSelectionClose","content","src","thumb","onError","event","target","location","address","has_table_booking","faTimes","Boolean","has_online_delivery","faCheck","phone_numbers","timings","highlights","CheckboxGroup","props","onCheckboxChange","newCheckedVals","checked","checkedVals","onChange","label","childLabelValues","lv","includes","App","openFilterPanel","setOpenFilterPanel","isLoading","setIsLoading","hasErrored","setHasErrored","results","setResults","setCategories","setCuisines","setOtherCuisineIds","setRating","setCost","setShowDetails","useEffect","then","cId","Object","values","window","addEventListener","innerWidth","filteredRestaurants","categoryCheckboxes","cuisineCheckboxes","ratingMarks","costMarks","resetFilters","faCircle","size","color","Checkbox","Typography","id","gutterBottom","Slider","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","max","step","marks","restaurantId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe7a2bea.chunk.js","sourcesContent":["export enum Categories {\n  dining = 'dining',\n  takeaway = 'takeaway',\n  delivery = 'delivery',\n  pubsBars = 'pubsBars',\n  nightlife = 'nightlife'\n}\n","export enum Cuisines {\n  cafe = 'cafe',\n  coffee = 'coffee',\n  pizza = 'pizza',\n  fast = 'fast',\n  asian = 'asian',\n  bakery = 'bakery',\n  italian = 'italian',\n  sandwich = 'sandwich',\n  chinese = 'chinese',\n  pub = 'pub',\n  egyptian = 'egyptian',\n  bubbleTea = 'bubbleTea',\n  other = 'other'\n}\n","import { Categories, Cuisines } from '../enums';\n\nexport const apiIds = {\n  categories: {\n    [Categories.dining]: 2,\n    [Categories.takeaway]: 5,\n    [Categories.delivery]: 1,\n    [Categories.pubsBars]: 11,\n    [Categories.nightlife]: 3\n  },\n  cuisines: {\n    [Cuisines.asian]: 3,\n    [Cuisines.bakery]: 5,\n    [Cuisines.cafe]: 1039,\n    [Cuisines.chinese]: 25,\n    [Cuisines.coffee]: 161,\n    [Cuisines.fast]: 40,\n    [Cuisines.italian]: 55,\n    [Cuisines.pizza]: 82,\n    [Cuisines.pub]: 983,\n    [Cuisines.sandwich]: 304,\n    [Cuisines.egyptian]: 146,\n    [Cuisines.bubbleTea]: 247,\n    [Cuisines.other]: -1 // to get around 'index signature of object type implicitly has any type' error\n  }\n};\n","export const withinRange = (range: number[], value: number) =>\n  value >= range[0] && value <= range[1];\n\nexport const convertPriceBracketToSymbol = (priceBracket: number) => {\n  let symbolString = '';\n  for (let i = 0; i < priceBracket; i++) {\n    symbolString = `${symbolString}$`;\n  }\n\n  return symbolString;\n};\n\nexport const getTimeoutPromise = (): Promise<any> =>\n  new Promise((resolve, reject) => setTimeout(() => reject(), 20000));\n","export const DEFAULT_COST_BOUNDS = [0, 500];\nexport const DEFAULT_RATING_BOUNDS = [0, 5];\n","import axios, { AxiosRequestConfig } from 'axios';\nimport { mean, isEqual, uniq } from 'lodash';\nimport { Categories, Cuisines } from '../enums';\nimport { apiIds } from './ApiIdMap';\nimport { Filters } from '../interfaces/Filters';\nimport { Sort, SortType, SortOrder } from '../interfaces/Sort';\nimport { SearchResponse } from '../interfaces/SearchResponse';\nimport { SearchParams } from '../interfaces/SearchParams';\nimport Restaurant from '../interfaces/Restaurant';\nimport { withinRange, getTimeoutPromise } from '../utils/helpers';\nimport { searchResponseCollection } from '../mockData/mockData';\nimport { DEFAULT_COST_BOUNDS, DEFAULT_RATING_BOUNDS } from '../utils/constants';\nimport { GetCuisinesResponse } from '../interfaces/GetCuisinesResponse';\n\nexport const SEARCH_API_MAX_RESULTS = 100;\nconst ENTITY_TYPE = 'city';\nconst ENTITY_ID = 297; // Adelaide\nconst baseUrl = 'https://developers.zomato.com/api/v2.1';\nconst userKey = '3bf73322184a4f70d9f4d634ec1c9fc2'; // 'd7d72ddcee1493db536aeeb88ae2440c';\n\nexport const getCuisines = async (): Promise<number[]> => {\n  const route = '/cuisines';\n  const requestOptions: AxiosRequestConfig = {\n    url: `${baseUrl}${route}`,\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=UTF-8',\n      'user-key': userKey\n    },\n    params: {\n      city_id: ENTITY_ID\n    }\n  };\n\n  let cuisinesResponse: GetCuisinesResponse;\n  try {\n    cuisinesResponse = await Promise.race([\n      axios(requestOptions),\n      getTimeoutPromise()\n    ]);\n  } catch (rejected) {\n    return null;\n  }\n\n  const allCuisineIds = cuisinesResponse.data.cuisines.map(\n    (dataItem) => dataItem.cuisine.cuisine_id\n  );\n\n  return allCuisineIds;\n};\n\nexport const getFilteredResults = async (\n  filters: Filters,\n  otherCuisineIds: number[]\n): Promise<Restaurant[]> => {\n  debugger;\n  if (isEqual(filters.cost, DEFAULT_COST_BOUNDS)) {\n    filters.cost = null;\n  }\n\n  if (isEqual(filters.rating, DEFAULT_RATING_BOUNDS)) {\n    filters.rating = null;\n  }\n\n  const paramSets: SearchParams[] = createSearchQueryParamSets(\n    filters,\n    DEFAULT_COST_BOUNDS,\n    DEFAULT_RATING_BOUNDS,\n    otherCuisineIds\n  );\n\n  let searchResponses: SearchResponse[];\n  try {\n    // MOCK DATA\n    // searchResponses = searchResponseCollection;\n\n    searchResponses = await collectSearchResponses(paramSets);\n  } catch (rejected) {\n    return null;\n  }\n\n  let allRestaurants = searchResponses.reduce((acc, curr: SearchResponse) => {\n    const restaurants = curr.data.restaurants.map(\n      (dataItem: { restaurant: {} }) => dataItem.restaurant\n    );\n    return [...acc, ...restaurants];\n  }, []);\n\n  if (filters.cost || filters.rating) {\n    allRestaurants = applySecondaryFilters(filters, allRestaurants);\n  }\n\n  return allRestaurants;\n};\n\nexport const createSearchQueryParamSets = (\n  filters: Filters,\n  DEFAULT_COST_BOUNDS: number[],\n  DEFAULT_RATING_BOUNDS: number[],\n  otherCuisineIds: number[]\n): SearchParams[] => {\n  let costSort;\n  let ratingSort;\n\n  if (filters.cost) {\n    costSort = {\n      type: 'cost' as SortType,\n      order: getSortOrder(filters.cost, DEFAULT_COST_BOUNDS) as SortOrder\n    };\n  }\n\n  if (filters.rating) {\n    ratingSort = {\n      type: 'rating' as SortType,\n      order: getSortOrder(filters.rating, DEFAULT_RATING_BOUNDS) as SortOrder\n    };\n  }\n\n  let paramSets: SearchParams[] = [];\n  if (filters.cost && filters.rating) {\n    paramSets = [\n      createSearchQueryParams(filters, costSort, otherCuisineIds),\n      createSearchQueryParams(filters, ratingSort, otherCuisineIds)\n    ];\n  } else if (filters.cost) {\n    paramSets = [createSearchQueryParams(filters, costSort, otherCuisineIds)];\n  } else if (filters.rating) {\n    paramSets = [createSearchQueryParams(filters, ratingSort, otherCuisineIds)];\n  } else {\n    const defaultSort = {\n      type: 'cost' as SortType,\n      order: 'desc' as SortOrder\n    };\n    paramSets = [\n      createSearchQueryParams(filters, defaultSort, otherCuisineIds)\n    ];\n  }\n\n  return paramSets;\n};\n\nconst createSearchQueryParams = (\n  filters: Filters,\n  sorting: Sort,\n  otherCuisineIds: number[]\n): SearchParams => {\n  const categoryIds = filters.categories.map(\n    (c: string) => apiIds.categories[c as Categories]\n  );\n\n  const cuisineIds = filters.cuisines.map((c: string) => {\n    return c === Cuisines.other\n      ? otherCuisineIds.join(',')\n      : apiIds.cuisines[c as Cuisines];\n  });\n\n  return {\n    entity_type: ENTITY_TYPE,\n    entity_id: ENTITY_ID,\n    category: categoryIds.join(),\n    cuisines: cuisineIds.join(),\n    sort: sorting.type,\n    order: sorting.order\n  };\n};\n\n// an attempt to target the search call\nconst getSortOrder = (currentBounds: number[], defaultBounds: number[]) => {\n  return mean(currentBounds) < mean(defaultBounds) ? 'asc' : 'desc';\n};\n\nexport const applySecondaryFilters = (\n  filters: Filters,\n  allRestaurants: Restaurant[]\n) => {\n  let restaurants = uniq(allRestaurants);\n\n  if (filters.cost) {\n    restaurants = restaurants.filter((r: Restaurant) =>\n      withinRange(filters.cost, r.average_cost_for_two)\n    );\n  }\n\n  if (filters.rating) {\n    restaurants = restaurants.filter((r: Restaurant) =>\n      withinRange(filters.rating, parseFloat(r.user_rating.aggregate_rating))\n    );\n  }\n\n  return restaurants;\n};\n\nconst collectSearchResponses = async (\n  paramSets: SearchParams[]\n): Promise<SearchResponse[]> => {\n  const BATCH_TOTAL = 20;\n  const promises: Promise<SearchResponse>[] = [];\n\n  for (const paramSet of paramSets) {\n    let startIndex = 0;\n    let totalResults: number = null;\n    do {\n      if (startIndex === 0) {\n        // doing an extra request here...\n        const res = await querySearchApi({ ...paramSet, start: startIndex });\n        totalResults = await res.data.results_found;\n      }\n      promises.push(querySearchApi({ ...paramSet, start: startIndex }));\n      startIndex = startIndex + BATCH_TOTAL;\n    } while (startIndex < Math.min(totalResults, SEARCH_API_MAX_RESULTS));\n  }\n\n  return await Promise.race([Promise.all(promises), getTimeoutPromise()]);\n};\n\nconst querySearchApi = async (\n  params: SearchParams\n): Promise<SearchResponse> => {\n  const route = '/search';\n  const requestOptions: AxiosRequestConfig = {\n    url: `${baseUrl}${route}`,\n    method: 'get',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json;charset=UTF-8',\n      'user-key': userKey\n    },\n    params\n  };\n\n  return axios(requestOptions);\n};\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './styles.scss';\nimport Restaurant from '../../interfaces/Restaurant';\nimport { convertPriceBracketToSymbol } from '../../utils/helpers';\n\ntype ScrollableListProps = { list: Restaurant[]; handleSelection: Function };\n\nconst ScrollableList: React.FC<ScrollableListProps> = ({\n  list,\n  handleSelection\n}) => {\n  const [selected, setSelected] = useState(null);\n\n  return (\n    <div className=\"results-list\">\n      <h2>Results ({list.length})</h2>\n      <ul>\n        {list.map((r: Restaurant, i: number) => {\n          return (\n            <li\n              className={i === selected ? 'selected' : ''}\n              key={i}\n              onClick={(e) => {\n                setSelected(i);\n                handleSelection(i);\n              }}\n            >\n              {r.name}\n              <div className=\"quick-bits\">\n                <span>{r.cuisines}</span> <br />\n                <span>\n                  <FontAwesomeIcon icon={faStar} />\n                  {r.user_rating.aggregate_rating} |\n                  {convertPriceBracketToSymbol(r.price_range)}\n                </span>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ScrollableList;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './styles.scss';\nimport Restaurant from '../../interfaces/Restaurant';\nimport { convertPriceBracketToSymbol } from '../../utils/helpers';\n\ntype DetailsProps = {\n  restaurant: Restaurant;\n  showDetails: boolean;\n  handleSelectionClose: any;\n};\n\nconst Details: React.FC<DetailsProps> = ({\n  restaurant,\n  showDetails,\n  handleSelectionClose\n}) => {\n  const handleImgLoadError = (event: any) => {\n    event.target.src = 'placeholder.jpeg';\n  };\n\n  const content = restaurant ? (\n    <div className=\"details-container\">\n      <button className=\"close-details\" onClick={handleSelectionClose}>\n        Close\n      </button>\n      <img\n        className=\"image\"\n        src={restaurant.thumb || 'placeholder.jpeg'}\n        onError={handleImgLoadError}\n      ></img>\n      <div className=\"text-content\">\n        <header>\n          <h2 className=\"title\">{restaurant.name}</h2>\n          <p className=\"byline\">{restaurant.location.address}</p>\n        </header>\n        <ul className=\"notables\">\n          {!restaurant.has_table_booking && (\n            <li>\n              {' '}\n              <FontAwesomeIcon icon={faTimes} />\n              No bookings\n            </li>\n          )}\n          {Boolean(restaurant.has_online_delivery) && (\n            <li>\n              <FontAwesomeIcon icon={faCheck} />\n              Delivery available\n            </li>\n          )}\n        </ul>\n        <dl className=\"details\">\n          <dt>Cuisines</dt>\n          <dd>{restaurant.cuisines}</dd>\n          <dt>Phone number</dt>\n          <dd>{restaurant.phone_numbers}</dd>\n          <dt>Opening hours</dt>\n          <dd>{restaurant.timings}</dd>\n          <dt>Price</dt>\n          <dd>{convertPriceBracketToSymbol(restaurant.price_range)}</dd>\n          <dt>Average rating</dt>\n          <dd>{restaurant.user_rating.aggregate_rating}/5 </dd>\n          <dt>Good to know</dt>\n          <dd>{restaurant.highlights.join(', ')}</dd>\n        </dl>\n      </div>\n    </div>\n  ) : (\n    <p>No restaurant selected</p>\n  );\n\n  return (\n    <div className={'results-details-container ' + (showDetails ? 'show' : '')}>\n      {content}\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport './styles.scss';\n\ninterface CheckboxGroupProps {\n  name: string;\n  label: string;\n  childLabelValues: { label: string; value: any }[];\n  onChange: any;\n  checkedVals?: any[];\n}\n\nconst CheckboxGroup: React.FC<CheckboxGroupProps> = (props) => {\n  // just read that this is an anti-pattern\n  // const [checkedVals, setCheckedVals] = useState(props.checkedVals || []);\n\n  const onCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newCheckedVals = event.target.checked\n      ? [...props.checkedVals, event.target.name]\n      : props.checkedVals.filter((c: any) => c !== event.target.name);\n\n    props.onChange(newCheckedVals);\n  };\n\n  return (\n    <div className=\"cb-container\">\n      <legend>{props.label}</legend>\n      <div className=\"input-container\">\n        {props.childLabelValues.map((lv, i) => (\n          <label key={i}>\n            <input\n              type=\"checkbox\"\n              key={i}\n              name={lv.value}\n              checked={props.checkedVals.includes(lv.value)}\n              onChange={onCheckboxChange}\n            ></input>\n            {lv.label}\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxGroup;\n","import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { isEqual } from 'lodash';\nimport './App.scss';\nimport Restaurant from './interfaces/Restaurant';\nimport { Categories, Cuisines } from './enums';\nimport { getFilteredResults, getCuisines } from './api/Api';\nimport { apiIds } from './api/ApiIdMap';\nimport { Filters } from './interfaces/Filters';\nimport ScrollableList from './components/ScrollableList';\nimport Details from './components/Details';\nimport CheckboxGroup from './components/Checkbox';\nimport { faTimes, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DEFAULT_COST_BOUNDS, DEFAULT_RATING_BOUNDS } from './utils/constants';\n\nconst App = () => {\n  const [openFilterPanel, setOpenFilterPanel] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasErrored, setHasErrored] = useState<boolean>(false);\n  const [results, setResults] = useState<Restaurant[]>([]);\n  const [categories, setCategories] = useState<Categories[]>([]);\n  const [cuisines, setCuisines] = useState<Cuisines[]>([]);\n  const [otherCuisineIds, setOtherCuisineIds] = useState<number[]>([]);\n  const [rating, setRating] = useState<number[]>([0, 5]);\n  const [cost, setCost] = useState<number[]>([0, 500]);\n  const [selected, setSelected] = useState<number>(null);\n  const [showDetails, setShowDetails] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    // determine other cuisine ids\n    getCuisines().then((allCuisineIds: number[]) => {\n      if (allCuisineIds) {\n        setOtherCuisineIds(\n          allCuisineIds.filter(\n            (cId: number) => !Object.values(apiIds.cuisines).includes(cId)\n          )\n        );\n      } else {\n        setHasErrored(true);\n      }\n\n      setIsLoading(false);\n    });\n  }, []);\n\n  // don't think this is working\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      if (window.innerWidth > 890 && openFilterPanel) {\n        setOpenFilterPanel(false);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const filters: Filters = {\n      categories,\n      cuisines,\n      cost,\n      rating\n    };\n\n    getFilteredResults(filters, otherCuisineIds).then(\n      (filteredRestaurants: Restaurant[]) => {\n        if (filteredRestaurants) {\n          setResults(filteredRestaurants);\n        } else {\n          setHasErrored(true);\n          setResults([]);\n        }\n\n        setIsLoading(false);\n      }\n    );\n  }, [categories, cuisines, cost, rating]);\n\n  const ratingValueText = (value: any) => value;\n  const costValueText = (value: any) => `$${value}`;\n\n  const categoryCheckboxes = [\n    { label: 'Dining', value: Categories.dining },\n    { label: 'Take-Away', value: Categories.takeaway },\n    { label: 'Delivery', value: Categories.delivery },\n    { label: 'Pubs & Bars', value: Categories.pubsBars },\n    { label: 'Nightlife', value: Categories.nightlife }\n  ];\n\n  const cuisineCheckboxes = [\n    { label: 'Cafe Food', value: Cuisines.cafe },\n    { label: 'Coffee and Tea', value: Cuisines.coffee },\n    { label: 'Pizza', value: Cuisines.pizza },\n    { label: 'Fast Food', value: Cuisines.fast },\n    { label: 'Asian', value: Cuisines.asian },\n    { label: 'Bakery', value: Cuisines.bakery },\n    { label: 'Italian', value: Cuisines.italian },\n    { label: 'Sandwich', value: Cuisines.sandwich },\n    { label: 'Chinese', value: Cuisines.chinese },\n    { label: 'Pub Food', value: Cuisines.pub },\n    { label: 'Bubble Tea', value: Cuisines.bubbleTea },\n    { label: 'Other', value: Cuisines.other }\n  ];\n\n  const ratingMarks = [\n    {\n      value: DEFAULT_RATING_BOUNDS[0],\n      label: '0'\n    },\n    {\n      value: DEFAULT_RATING_BOUNDS[1],\n      label: '5'\n    }\n  ];\n\n  const costMarks = [\n    {\n      value: DEFAULT_COST_BOUNDS[0],\n      label: '$'\n    },\n    {\n      value: DEFAULT_COST_BOUNDS[1],\n      label: '$$$$'\n    }\n  ];\n\n  const handleCategoriesChange = (categories: Categories[]) => {\n    setCategories(categories);\n  };\n\n  const handleCuisinesChange = (cuisines: Cuisines[]) => {\n    setCuisines(cuisines);\n  };\n\n  const handleRatingChange = (event: any, newValue: any) => {\n    setRating(newValue);\n  };\n\n  const handleCostChange = (event: any, newValue: any) => {\n    setCost(newValue);\n  };\n\n  const handleSelection = (restaurantId: number) => {\n    setSelected(restaurantId);\n    setShowDetails(true);\n  };\n\n  const handleSelectionClose = () => {\n    setShowDetails(false);\n  };\n\n  const handleFilterClick = (event: any) => {\n    setOpenFilterPanel(!openFilterPanel);\n  };\n\n  const handleErrorDismissal = (event: any) => {\n    setHasErrored(false);\n    setResults([]);\n    resetFilters();\n  };\n\n  // reset without triggering changes to state, which will trigger further API calls\n  const resetFilters = () => {\n    if (categories.length > 0) {\n      setCategories([]);\n    }\n\n    if (cuisines.length > 0) {\n      setCuisines([]);\n    }\n\n    if (!isEqual(cost, DEFAULT_COST_BOUNDS)) {\n      setCost(DEFAULT_COST_BOUNDS);\n    }\n\n    if (!isEqual(rating, DEFAULT_RATING_BOUNDS)) {\n      setRating(DEFAULT_RATING_BOUNDS);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {hasErrored && (\n        <h2 className=\"error\">\n          There has been an error.\n          <button className=\"closebtn\" onClick={handleErrorDismissal}>\n            <span className=\"fa-layers fa-fw\">\n              <FontAwesomeIcon icon={faCircle} size=\"lg\" color=\"#f44336\" />\n              <FontAwesomeIcon icon={faTimes} size=\"lg\" color=\"white\" />\n            </span>\n          </button>\n        </h2>\n      )}\n      <button className=\"show-filters\" onClick={handleFilterClick}>\n        Filter\n      </button>\n      <div className={'filter-panel ' + (openFilterPanel ? 'show' : '')}>\n        <div className=\"checkbox-groups\">\n          <CheckboxGroup\n            name=\"category\"\n            label=\"Category\"\n            childLabelValues={categoryCheckboxes}\n            checkedVals={categories}\n            onChange={handleCategoriesChange}\n          />\n          <CheckboxGroup\n            name=\"cuisine\"\n            label=\"Cuisine\"\n            childLabelValues={cuisineCheckboxes}\n            checkedVals={cuisines}\n            onChange={handleCuisinesChange}\n          />\n        </div>\n\n        <div className=\"sliders\">\n          <div className=\"slider\">\n            <Typography id=\"rating-range-slider\" gutterBottom>\n              Rating\n            </Typography>\n            <Slider\n              value={rating}\n              onChange={handleRatingChange}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"rating-range-slider\"\n              getAriaValueText={ratingValueText}\n              min={DEFAULT_RATING_BOUNDS[0]}\n              max={DEFAULT_RATING_BOUNDS[1]}\n              step={0.1}\n              marks={ratingMarks}\n            />\n          </div>\n\n          <div className=\"slider\">\n            <Typography id=\"cost-range-slider\" gutterBottom>\n              Cost\n            </Typography>\n            <Slider\n              value={cost}\n              onChange={handleCostChange}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"cost-range-slider\"\n              getAriaValueText={costValueText}\n              min={DEFAULT_COST_BOUNDS[0]}\n              max={DEFAULT_COST_BOUNDS[1]}\n              step={10}\n              marks={costMarks}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"results-panel\">\n        {isLoading && (\n          <div className=\"spinner\">\n            <div className=\"double-bounce1\"></div>\n            <div className=\"double-bounce2\"></div>\n          </div>\n        )}\n        {!isLoading && results && (\n          <div className=\"list-and-details\">\n            <ScrollableList list={results} handleSelection={handleSelection} />\n            <Details\n              restaurant={results[selected]}\n              showDetails={showDetails}\n              handleSelectionClose={handleSelectionClose}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}